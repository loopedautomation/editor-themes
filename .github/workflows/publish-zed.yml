name: Mirror Zed themes to zed-theme repo

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  mirror-zed:
    runs-on: ubuntu-latest
    concurrency:
      group: publish-zed
      cancel-in-progress: true
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Install uv
        uses: astral-sh/setup-uv@v6

      - name: Set up Python
        run: uv python install

      - name: Install dependencies
        run: uv sync

      - name: Build Zed themes
        run: uv run build_zed.py

      - name: Mirror zed/ to loopedautomation/zed-theme
        env:
          TARGET_REPO: loopedautomation/zed-theme
          TOKEN: ${{ secrets.ZED_THEME_PAT }}
        run: |
          set -euo pipefail

          if [ -z "${TOKEN:-}" ]; then
            echo "Missing ZED_THEME_PAT secret"
            exit 1
          fi

          if [ ! -d "zed" ]; then
            echo "No zed/ directory present. Aborting."
            exit 1
          fi

          # Clone the target repository
          echo "Cloning ${TARGET_REPO}..."
          TMP_DIR=$(mktemp -d)
          git clone "https://x-access-token:${TOKEN}@github.com/${TARGET_REPO}.git" "$TMP_DIR"
          cd "$TMP_DIR"

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Copy files from zed/ to the cloned repo
          echo "Copying zed/ contents..."
          cp -r "${GITHUB_WORKSPACE}/zed/"* .

          # Check if there are any changes
          if git status --porcelain | grep -q .; then
            echo "Changes detected, committing..."
            git add .
            git commit -m "Mirror zed/ from editor-themes@${{ github.sha }}"
            echo "Pushing to ${TARGET_REPO}..."
            git push origin main
          else
            echo "No changes detected. Skipping commit and push."
          fi

          # Cleanup
          cd /
          rm -rf "$TMP_DIR"
